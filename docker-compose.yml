---
## DO NOT EDIT!
# This file was provisioned by Terraform
# File origin: https://github.com/Arrow-air/tf-github/tree/main/src/templates/rust-svc/docker-compose.yml
version: '3.6'
volumes:
  postgis-data:
  postgis-ssl:
  redis-data:

configs:
  log4rs:
    file: log4rs.yaml
  dot-env:
    file: .env

services:
  postgis-init:
    container_name: ${DOCKER_NAME}-example-postgis-init
    image: ghcr.io/arrow-air/tools/arrow-gis:1.0
    volumes:
      - type: volume
        source: postgis-data
        target: /var/lib/postgresql
      - type: volume
        source: postgis-ssl
        target: /ssl
      - type: bind
        source: scripts/postgis-init.sh
        target: /scripts/postgis-init.sh
        read_only: true
    entrypoint: ["/bin/sh", "-c"]
    command: ["/scripts/postgis-init.sh"]
    environment:
      - UID=postgres
      - GID=1001

  postgis:
    container_name: ${DOCKER_NAME}-example-postgis
    image: ghcr.io/arrow-air/tools/arrow-gis:1.0
    depends_on:
      postgis-init:
        condition: service_completed_successfully
    restart: always
    user: "postgres:1001"
    ports:
      - 5432:5432
    healthcheck:
      test: "pg_isready -d gis -h localhost -p 5432 -U svc_gis"
      interval: 10s
      timeout: 30s
      retries: 3
    volumes:
      - type: volume
        source: postgis-data
        target: /var/lib/postgresql
      - type: volume
        source: postgis-ssl
        target: /ssl
        read_only: true
      - type: bind
        source: scripts/init.sql
        target: /docker-entrypoint-initdb.d/init.sql
    environment:
        - POSTGRES_HOST_AUTH_METHOD=trust # TODO(R3) - Fix, unsafe
    command: >
      -c ssl=true
      -c ssl_ca_file=${DB_CA_CERT}
      -c ssl_cert_file=${DB_CLIENT_CERT}
      -c ssl_key_file=${DB_CLIENT_KEY}

  redis:
    container_name: svc-gis-redis
    image: redis:6.2-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 2s
      timeout: 1s
      retries: 3
    volumes:
      - redis-data:/data
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
      - ALLOW_EMPTY_PASSWORD=yes

  web-server:
    depends_on:
      postgis:
        condition: service_healthy
      redis:
        condition: service_healthy
    extends:
      file: docker-compose-base.yml
      service: web-server
    volumes:
      - type: volume
        source: postgis-ssl
        target: /ssl
        read_only: true
    environment:
      - PG__USER
      - PG__DBNAME
      - PG__HOST
      - PG__PORT
      - PG__SSLMODE
      - DB_CA_CERT
      - DB_CLIENT_CERT
      - DB_CLIENT_KEY
      - REDIS__URL
      - REDIS__POOL__MAX_SIZE
      - REDIS__POOL__TIMEOUTS__WAIT__SECS
      - REDIS__POOL__TIMEOUTS__WAIT__NANOS
      - DOCKER_PORT_GRPC
      - LOG_CONFIG

  example:
    depends_on:
      web-server:
        condition: service_healthy
    extends:
      file: docker-compose-base.yml
      service: example
    environment:
      - REDIS__URL

  ut-coverage:
    extends:
      file: docker-compose-base.yml
      service: ut-coverage

  it-coverage:
    extends:
      file: docker-compose-base.yml
      service: it-coverage
    depends_on:
      web-server:
        condition: service_healthy
    volumes:
      - type: volume
        source: postgis-ssl
        target: /ssl
        read_only: true
