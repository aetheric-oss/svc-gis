[package]
description = "Arrow GIS server gRPC client"
name        = "svc-gis-client-grpc"
version     = "0.1.1-develop.11"

categories.workspace   = true
edition.workspace      = true
homepage.workspace     = true
keywords.workspace     = true
license-file.workspace = true
repository.workspace   = true

[features]
dev       = ["mock", "tokio"]
test_util = ["mock", "stub_backends"]
# Will add a 'mock' module for the enabled resources, providing access to mock data generation functions
mock = []
# Will use a stubbed server connection, only use for tests!
stub_backends = [
  "svc-gis/stub_server",
  "lib-common/grpc_mock",
  "tower",
  "tokio",
  "tokio-postgres",
  "deadpool-postgres",
]
# Will implement stub functions for the client, only use for tests!
stub_client = ["svc-gis"]

[dependencies]
cfg-if            = "1.0"
chrono            = { version = "0.4", features = ["serde"] }
deadpool-postgres = { version = "0.11", optional = true }
log               = { version = "0.4" }
num-derive        = "0.4"
num-traits        = "0.2"
prost             = "0.12"
prost-types       = "0.12"
redis             = "0.24"
serde             = { version = "1.0", features = ["derive"] }
serde_json        = "1.0"
strum             = { version = "0.25", features = ["derive"] }
svc-gis           = { path = "../server", optional = true }
tokio-postgres    = { version = "0.7", optional = true }
tonic             = "0.10"
tower             = { version = "0.4", optional = true }
uuid              = { version = "1.4", features = ["v4"] }

[dependencies.postgres-types]
features = ["with-uuid-1", "with-geo-types-0_7", "with-chrono-0_4", "derive"]
version  = "0.2"

[dependencies.lib-common]
features = ["grpc"]
git      = "https://github.com/aetheric-oss/lib-common.git"
tag      = "v0.2.1-develop.0"

[dev-dependencies]
geo  = "0.27.0"
rand = "0.8"

[dependencies.tokio]
features = ["macros", "rt-multi-thread"]
optional = true
version  = "1.33"

# Make sure we enable the 'mock_services' features when running tests
[dev-dependencies.svc-gis-client-grpc]
features = ["dev"]
path     = "."

[[example]]
name = "grpc"
